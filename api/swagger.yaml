swagger: '2.0'
info:
  title: Pet Shop Example API
  version: "0.1"
  description: Simple example API to store and retrieve pets
consumes:
  - application/json
produces:
  - application/json
#security:
#  # enable OAuth protection for all REST endpoints
#  # (only active if the TOKENINFO_URL environment variable is set)
#  - oauth2: [uid]
paths:
  /challenges:
    post:
      tags: [Challenges]
      operationId: app.challenges.get_all
      parameters:
        - name: from_user
          in: body
          required: true
          schema:
            $ref: "#/definitions/FromUserRequest"
      responses:
        default:
          description: Return challenges
          schema:
            type: array
            items:
              $ref: '#/definitions/Challenge'

  /challenge/apply/{id}:
    post:
      tags: [Challenges]
      operationId:  app.challenges.apply
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: "#/definitions/FromUserRequest"
      responses:
        default:
          description: Return updated challenge
          schema:
            $ref: "#/definitions/Challenge"

  /whishlist/all:
    get:
      tags: [Whishlist]
      operationId: app.wishlist.get_all
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/FromUserRequest"
      responses:
        default:
          description: Get all whishlist
          schema:
            $ref:  "#/definitions/Wishlist"

  /wishlist:
    post:
      tags: [Wishlist]
      operationId: app.wishlist.create
      parameters:
        - in: body
          name: body
          schema:
            $ref: "#/definitions/WishlistCreateRequest"
      responses:
        default:
          description: Create a new wishlist item
          schema:
            type: array
            items:
              $ref:  "#/definitions/Wishlist"

  /wishlist/{id}:
    delete:
      tags: [Wishlist]
      operationId: app.wishlist.delete
      parameters:
        - in: path
          name: id
          type: string
          required: true
        - in: body
          name: body
          schema:
            $ref: "#/definitions/FromUserRequest"
      responses:
        default:
          description: Delete a wishlist item
          schema:
            type: array
            items:
              $ref:  "#/definitions/Wishlist"



definitions:
  FromUserRequest:
    type: object
    properties:
      id:
        type: number
    required: [id]
  Challenge:
    type: object
  Wishlist:
    type: object
  WishlistCreateRequest:
    type: object
    properties:
      userId:
        type: number



securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
